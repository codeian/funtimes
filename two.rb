#!/usr/bin/env ruby

# Question: 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#
# Even valued = sequence element is divisible by two, not the 2nd, 4th, 6th, 8th, etc elements
# (Took longer to figure that distinction out than I'd like to admit...argh, words...)

# Answer:

sum = 2

temp = 1
prev = 2
nextElement = 3 # darn ruby syntax prevents "next" as a variable
                # I usually think of Fib as a swap/shift pattern

while nextElement < 4000000

    temp = nextElement + prev
    prev = nextElement
    nextElement = temp

    if nextElement % 2 == 0
        sum = sum + nextElement
    end 
end

puts sum # today, I discovered "puts"
